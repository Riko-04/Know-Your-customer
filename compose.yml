services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: kyc_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  eurekaserver:
    image: riko04/eurekaserver:latest
    container_name: eurekaserver
    ports:
      - "8761:8761"

  apigateway:
    image: riko04/apigateway:latest
    container_name: apigateway
    ports:
      - "8080:8080"
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eurekaserver:8761/eureka/
    depends_on:
      - eurekaserver

  emailservice:
    image: riko04/emailservice:latest
    container_name: emailservice
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eurekaserver:8761/eureka/
    depends_on:
      - rabbitmq
      - eurekaserver

  kycbackend:
    image: riko04/kycbackend:latest
    container_name: kycbackend
    ports:
      - "9001:9001"
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: main_db
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eurekaserver:8761/eureka/
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_started
      eurekaserver:
        condition: service_started

  reportsbackend:
    image: riko04/reportsbackend:latest
    container_name: reportsbackend
    ports:
      - "9002:9002"
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: main_db
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eurekaserver:8761/eureka/
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_started
      eurekaserver:
        condition: service_started

  kycfrontend:
    image: riko04/kycfrontend:latest
    container_name: kycfrontend
    ports:
      - "3001:80"
    depends_on:
      - kycbackend

  reportsfrontend:
    image: riko04/reportsfrontend:latest
    container_name: reportsfrontend
    ports:
      - "3002:80"
    depends_on:
      - reportsbackend

volumes:
  postgres_data:
